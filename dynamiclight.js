"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const event_1 = require("bdsx/event");
const utils_1 = require("./utils");
const blockpos_1 = require("bdsx/bds/blockpos");
const block_1 = require("bdsx/bds/block");
const launcher_1 = require("bdsx/launcher");
const Lights = new Map();
const Items = new Map();
async function Load() {
    Lights.clear();
    for (const [key, value] of (0, utils_1.StringToMap)((0, utils_1.LoadFile)(utils_1.TypePath.world, "", "lights"), "id")) {
        Lights.set(key, value);
    }
    console.log(`[${utils_1.plugin.name}] `.magenta + `Lights currently active: ${Lights.size}`);
    Items.clear();
    for (const [key, value] of (0, utils_1.StringToMap)((0, utils_1.LoadFile)(utils_1.TypePath.plugin, "", "items"), "name")) {
        Items.set(key, value);
    }
    console.log(`[${utils_1.plugin.name}] `.magenta + `Items with light: ${Items.size}`);
}
Load();
function Save() {
    (0, utils_1.SaveFile)(utils_1.TypePath.world, "", "lights", (0, utils_1.MapToString)(Lights));
}
const save_thred = setInterval(function () {
    Save();
}, 30 * 1000);
function getBlockAir(entity, dir = 0) {
    const region = entity.getRegion();
    const pos = entity.getPosition();
    let blockpos = blockpos_1.BlockPos.create(Math.floor(pos.x), Math.floor(pos.y), Math.floor(pos.z));
    switch (dir) {
        case 0:
            blockpos = blockpos_1.BlockPos.create(Math.floor(pos.x), Math.floor(pos.y), Math.floor(pos.z));
            break;
        case 1:
            blockpos = blockpos_1.BlockPos.create(Math.floor(pos.x), Math.floor(pos.y + 1), Math.floor(pos.z));
            break;
        case 2:
            blockpos = blockpos_1.BlockPos.create(Math.floor(pos.x), Math.floor(pos.y - 1), Math.floor(pos.z));
            break;
        case 3:
            blockpos = blockpos_1.BlockPos.create(Math.floor(pos.x + 1), Math.floor(pos.y), Math.floor(pos.z));
            break;
        case 4:
            blockpos = blockpos_1.BlockPos.create(Math.floor(pos.x - 1), Math.floor(pos.y), Math.floor(pos.z));
            break;
        case 5:
            blockpos = blockpos_1.BlockPos.create(Math.floor(pos.x), Math.floor(pos.y), Math.floor(pos.z + 1));
            break;
        case 6:
            blockpos = blockpos_1.BlockPos.create(Math.floor(pos.x), Math.floor(pos.y), Math.floor(pos.z - 1));
            break;
        default:
            return false;
    }
    const block = region.getBlock(blockpos);
    if (block.getName() == "minecraft:air" || block.getName() == "minecraft:light_block" || block.getName() == "minecraft:water")
        return blockpos;
    return getBlockAir(entity, (dir + 1));
}
async function setLightHandItem(entity) {
    if (Items.has(entity.getMainhandSlot().getName())) {
        const blockpos = getBlockAir(entity);
        if (blockpos) {
            const item = Items.get(entity.getMainhandSlot().getName());
            const id = `${blockpos.x}_${blockpos.y}_${blockpos.z}`;
            Lights.set(`${id}`, { id: `${id}`, underwater: item.underwater, x: blockpos.x, y: blockpos.y, z: blockpos.z, time: (0, utils_1.Time)(0.5), light: item.light });
            const block = block_1.Block.create('minecraft:light_block', item.light);
            entity.getRegion().setBlock(blockpos, block);
        }
    }
}
async function setLightEntityItem(entity) {
    if (Items.has(entity.itemStack.getName())) {
        const blockpos = getBlockAir(entity);
        if (blockpos) {
            const item = Items.get(entity.itemStack.getName());
            const id = `${blockpos.x}_${blockpos.y}_${blockpos.z}`;
            Lights.set(`${id}`, { id: `${id}`, underwater: item.underwater, x: blockpos.x, y: blockpos.y, z: blockpos.z, time: (0, utils_1.Time)(0.5), light: item.light });
            const block = block_1.Block.create('minecraft:light_block', item.light);
            entity.getRegion().setBlock(blockpos, block);
        }
    }
}
const thred = setInterval(function () {
    launcher_1.bedrockServer.level.getEntities().forEach((actor) => {
        if (actor.isMob()) {
            setLightHandItem(actor);
        }
        else if (actor.isItem()) {
            setLightEntityItem(actor);
        }
    });
    launcher_1.bedrockServer.level.getPlayers().forEach((player) => {
        setLightHandItem(player);
        const region = player.getRegion();
        for (const data of Lights.values()) {
            if ((0, utils_1.Time)() > data.time) {
                const blockpos = blockpos_1.BlockPos.create(data.x, data.y, data.z);
                const light = region.getBlock(blockpos);
                if (light.getName() == "minecraft:light_block") {
                    const block = block_1.Block.create('minecraft:air');
                    if (region.setBlock(blockpos, block)) {
                        Lights.delete(`${blockpos.x}_${blockpos.y}_${blockpos.z}`);
                    }
                }
            }
        }
    });
}, 500);
event_1.events.serverClose.on(() => {
    clearInterval(thred);
    clearInterval(save_thred);
    Save();
});
//# sourceMappingURL=data:application/json;base64,